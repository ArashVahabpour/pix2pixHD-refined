<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="106eb71f-1317-4392-a88d-4fe7a3305eb8" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/../stage_2__kfold_and_refine/stage_2_2__refine/data/aligned_dataset.py" beforeDir="false" afterPath="$PROJECT_DIR$/../stage_2__kfold_and_refine/stage_2_2__refine/data/aligned_dataset.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../stage_2__kfold_and_refine/stage_2_2__refine/options/base_options.py" beforeDir="false" afterPath="$PROJECT_DIR$/../stage_2__kfold_and_refine/stage_2_2__refine/options/base_options.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../stage_2__kfold_and_refine/stage_2_2__refine/options/train_options.py" beforeDir="false" afterPath="$PROJECT_DIR$/../stage_2__kfold_and_refine/stage_2_2__refine/options/train_options.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/data/aligned_dataset.py" beforeDir="false" afterPath="$PROJECT_DIR$/data/aligned_dataset.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/models/pix2pixHD_model.py" beforeDir="false" afterPath="$PROJECT_DIR$/models/pix2pixHD_model.py" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>niter_fix_global</find>
      <find>forward</find>
      <find>labe</find>
    </findStrings>
    <dirStrings>
      <dir>$PROJECT_DIR$</dir>
    </dirStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="48" />
    <option name="width" value="2499" />
    <option name="height" value="1299" />
  </component>
  <component name="ProjectId" id="1OndOKTFl3RN7zSb7j9dmwYrarz" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="train" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="stage_2__self_refine" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/train.py" />
      <option name="PARAMETERS" value="--gpu_ids 0,1 --name cars.merged.context.self_refine --label_nc 0 --no_flip --loadSize 256 --input_nc 3 --output_nc1 2 --output_nc2 2 --batchSize 14 --dataroot $PROJECT_DIR$/../../../../shared/datasets/cars.merged.new --checkpoints_dir $PROJECT_DIR$/../../checkpoints --continue_train" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.train" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="106eb71f-1317-4392-a88d-4fe7a3305eb8" name="Default Changelist" comment="" />
      <created>1562876475933</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1562876475933</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/models/pix2pixHD_model.py</url>
          <line>58</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/models/pix2pixHD_model.py</url>
          <line>139</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateCodeFragment">
      <expression>
        <expression-string>[(x.min(), x.max()) for x in (A_tensor, B_tensor, C_tensor) ]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>[(x.min(), x.max()) for x in A_tensor, B_tensor, C_tensor ]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>Pix2PixHDModel.stack_images(fake_image_and_edge1)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>fake_image_and_edge2</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>fake_image_and_edge1</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>fake_image_and_edge1[:, 0:1]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>[(x.min(), x.max()) for x in (A_tensor, B_tensor, C_tensor)]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>[(min(x), max(x)) for x in (A_tensor, B_tensor, C_tensor)]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>import matplotlib.pyplot as plt
plt.imshow(C_tensor.detach().cpu()[0])
plt.show()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="breakpointCondition">
      <expression>
        <expression-string>infer</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
</project>